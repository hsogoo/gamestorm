<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<!-- 配置数据源属性文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    <!-- 对空闲DB连接是否进行有效验证 -->
    <property name="testWhileIdle" value="true"/>
    <!-- 在取出DB连接时是否进行有效验证 -->
    <property name="testOnBorrow" value="true"/>
    <!-- 在使用完返回DB连接时是否进行有效验证 -->
    <property name="testOnReturn" value="false"/>
    <property name="validationQuery">
        <value>select 1</value>
    </property>
    <!--每隔一段多少毫秒跑一次检测空閑DB连接的線程-->
    <property name="timeBetweenEvictionRunsMillis" value="30000"/>
    <!--每次驗證空閑連接的連接數目-->
    <property name="numTestsPerEvictionRun" value="3"/>
    <property name="maxActive" value="15"/>
    <property name="maxIdle" value="15"/>
    <property name="maxWait" value="3000"/>
    <property name="initialSize" value="1" />  
    <property name="minIdle" value="1" />  
	</bean>
	
	<!-- 配置SqlMapClient对象 -->  
  <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">    
    <property name="configLocation" value="classpath:config/sqlMapConfig.xml"/>  
    <property name="dataSource" ref="dataSource"/>    
  </bean>  
    
  <!--根据sqlMapClien创建一个SqlMapClient模版类-->  
  <bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">  
    <property name="sqlMapClient" ref="sqlMapClient"/>  
  </bean>  
  
  <context:annotation-config/>
    
  <!-- 配置事务管理器 -->  
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
    <property name="dataSource" ref="dataSource"/>    
  </bean>  
    
  <!-- 启动spring事务注解，事务注解尽在此 -->  
  <tx:annotation-driven transaction-manager="transactionManager"/>  
    
  <!-- 配置事务特性   
  <tx:advice id="txAdvice" transaction-manager="transactionManager">  
    <tx:attributes>  
        <tx:method name="select*" read-only="true" propagation="REQUIRED"/>  
        <tx:method name="find*" read-only="true" propagation="REQUIRED"/>  
        <tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
        <tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
        <tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
        <tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
        <tx:method name="*" read-only="true"/>  
    </tx:attributes>  
  </tx:advice> -->  
    
  <!-- 配置事务代理拦截器     
  <bean id="baseTransactionProxy" abstract="true"   
    class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">  
    <property name="transactionManager">  
      <ref bean="transactionManager"/>  
    </property>  
    <property name="transactionAttributes">  
      <props>  
        <prop key="insert*">PROPAGATION_REQUIRED</prop>  
        <prop key="update*">PROPAGATION_REQUIRED</prop>  
        <prop key="delete*">PROPAGATION_REQUIRED</prop>  
        <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>      
      </props>     
    </property>  
  </bean> -->  
    
  <!-- 配置哪些类的方法需要进行事务管理   
  <aop:config>  
    <aop:pointcut id="baseServiceMethods" expression="execution(* com.archie.service.*.*(..))"/>  
      <aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods"/>  
    </aop:config>  
  <aop:aspectj-autoproxy /> -->  
    
  <!-- 配置Dao实例   
  <bean id="userDao" class="com.archie.dao.UserDao">  
    <property name="sqlMapClient" ref="sqlMapClient"/>     
  </bean> -->  
    
  <!-- 配置Service实例   
  <bean id="userService" class="com.archie.service.UserService">  
    <property name="userDao" ref="userDao"/>  
  </bean> -->  
    
  <!-- 添加了事务的管理类    
  <bean id="userManager" parent="baseTransactionProxy">     
    <property name="target">      
      <bean class="com.archie.service.UserService"/>  
    </property>    
  </bean> -->

</beans>